{"ast":null,"code":"import _slicedToArray from\"/home/pavelhardzei/Studying/3_course/6sem/cg/lab1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState('#000000'),_useState2=_slicedToArray(_useState,2),colorValue=_useState2[0],setColorValue=_useState2[1];var _useState3=useState('rgb(0, 0, 0)'),_useState4=_slicedToArray(_useState3,2),RGBValue=_useState4[0],setRGBValue=_useState4[1];var _useState5=useState('cmyk(0%, 0%, 0%, 100%)'),_useState6=_slicedToArray(_useState5,2),CMYKValue=_useState6[0],setCMYKValue=_useState6[1];var _useState7=useState('hls(0, 0%, 0%)'),_useState8=_slicedToArray(_useState7,2),HLSValue=_useState8[0],setHLSValue=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),RGBValid=_useState10[0],setRGBValid=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),CMYKValid=_useState12[0],setCMYKValid=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),HLSValid=_useState14[0],setHLSValid=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),editing=_useState16[0],setEditing=_useState16[1];useEffect(function(){if(editing==null)return;var rgb=hexToRgb(colorValue);var cmyk=rgbToCmyk(rgb.r,rgb.g,rgb.b);var hls=rgbToHls(rgb.r,rgb.g,rgb.b);if(editing!='rgb')setRGBValue(\"rgb(\".concat(rgb.r,\", \").concat(rgb.g,\", \").concat(rgb.b,\")\"));if(editing!='cmyk')setCMYKValue(\"cmyk(\".concat(cmyk.c,\"%, \").concat(cmyk.m,\"%, \").concat(cmyk.y,\"%, \").concat(cmyk.k,\"%)\"));if(editing!='hls')setHLSValue(\"hls(\".concat(hls.h,\", \").concat(hls.l,\"%, \").concat(hls.s,\"%)\"));},[colorValue]);var hexToRgb=function hexToRgb(hex){var result=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null;};var rgbToHex=function rgbToHex(r,g,b){var componentToHex=function componentToHex(c){var hex=c.toString(16);return hex.length==1?\"0\"+hex:hex;};return\"#\"+componentToHex(r)+componentToHex(g)+componentToHex(b);};var cmykToRgb=function cmykToRgb(c,m,y,k){return{r:Math.round(255*(1-c)*(1-k)),g:Math.round(255*(1-m)*(1-k)),b:Math.round(255*(1-y)*(1-k))};};var rgbToCmyk=function rgbToCmyk(r,g,b){var k=Math.min(1-r/255,1-g/255,1-b/255);return{c:Math.round(100*(1-r/255-k)/(1-k)),m:Math.round(100*(1-g/255-k)/(1-k)),y:Math.round(100*(1-b/255-k)/(1-k)),k:Math.round(100*k)};};var hlsToRgb=function hlsToRgb(h,l,s){l/=100;s/=100;var c=(1-Math.abs(2*l-1))*s;var x=c*(1-Math.abs(Math.floor(h/60)%2-1));var m=l-c/2;var arr=[[c,x,0],[x,c,0],[0,c,x],[0,x,c],[x,0,c],[c,0,x]];var _arr$Math$floor=_slicedToArray(arr[Math.floor(h/60)],3),r=_arr$Math$floor[0],g=_arr$Math$floor[1],b=_arr$Math$floor[2];return{r:Math.round(255*(r+m)),g:Math.round(255*(g+m)),b:Math.round(255*(b+m))};};var rgbToHls=function rgbToHls(r,g,b){r/=255;g/=255;b/=255;var cMax=Math.max(r,g,b);var cMin=Math.min(r,g,b);var delta=cMax-cMin;var h,l,s;if(delta===0)h=0;else if(cMax===r)h=60*((g-b)/delta%6);else if(cMax===g)h=60*((b-r)/delta+2);else h=60*((r-g)/delta+4);l=(cMax+cMin)/2;s=delta/(1-Math.abs(2*l-1));h=Math.round(h);return{h:h<0?360+h:h,l:Math.round(100*l),s:Math.round(100*s)};};var colorInput=function colorInput(e){setColorValue(e.target.value);setEditing('none');};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"RGB, CMYK, HLS\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"color\",value:colorValue,onInput:colorInput})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"RGB\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"\".concat(!RGBValid?'error':''),value:RGBValue,onChange:function onChange(e){setRGBValue(e.target.value);setEditing('rgb');var splited=/^rgb\\(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\s*,\\s*([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\s*,\\s*([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\s*\\)$/.exec(e.target.value);if(splited===null){setRGBValid(false);return;}setRGBValid(true);splited=splited.map(function(x){return parseInt(x);});setColorValue(rgbToHex(splited[1],splited[2],splited[3]));}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"CMYK\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"\".concat(!CMYKValid?'error':''),value:CMYKValue,onChange:function onChange(e){setCMYKValue(e.target.value);setEditing('cmyk');var splited=/^cmyk\\(([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*\\)$/.exec(e.target.value);if(splited===null){setCMYKValid(false);return;}setCMYKValid(true);splited=splited.map(function(x){return parseInt(x)/100;});var rgb=cmykToRgb(splited[1],splited[2],splited[3],splited[4]);setColorValue(rgbToHex(rgb.r,rgb.g,rgb.b));}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"HLS\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"\".concat(!HLSValid?'error':''),value:HLSValue,onChange:function onChange(e){setHLSValue(e.target.value);setEditing('hls');var splited=/^hls\\(([0-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9])\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*\\)$/.exec(e.target.value);if(splited===null){setHLSValid(false);return;}setHLSValid(true);splited=splited.map(function(x){return parseInt(x);});var rgb=hlsToRgb(splited[1],splited[2],splited[3]);setColorValue(rgbToHex(rgb.r,rgb.g,rgb.b));}})]})]});}export default App;","map":{"version":3,"sources":["/home/pavelhardzei/Studying/3_course/6sem/cg/lab1/src/App.js"],"names":["React","useEffect","useState","App","colorValue","setColorValue","RGBValue","setRGBValue","CMYKValue","setCMYKValue","HLSValue","setHLSValue","RGBValid","setRGBValid","CMYKValid","setCMYKValid","HLSValid","setHLSValid","editing","setEditing","rgb","hexToRgb","cmyk","rgbToCmyk","r","g","b","hls","rgbToHls","c","m","y","k","h","l","s","hex","result","exec","parseInt","rgbToHex","componentToHex","toString","length","cmykToRgb","Math","round","min","hlsToRgb","abs","x","floor","arr","cMax","max","cMin","delta","colorInput","e","target","value","splited","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [colorValue, setColorValue] = useState('#000000')\n  const [RGBValue, setRGBValue] = useState('rgb(0, 0, 0)')\n  const [CMYKValue, setCMYKValue] = useState('cmyk(0%, 0%, 0%, 100%)')\n  const [HLSValue, setHLSValue] = useState('hls(0, 0%, 0%)')\n\n  const [RGBValid, setRGBValid] = useState(true)\n  const [CMYKValid, setCMYKValid] = useState(true)\n  const [HLSValid, setHLSValid] = useState(true)\n\n  const [editing, setEditing] = useState(null)\n\n  useEffect(() => {\n    if (editing == null)\n      return\n\n    let rgb = hexToRgb(colorValue)\n    let cmyk = rgbToCmyk(rgb.r, rgb.g, rgb.b)\n    let hls = rgbToHls(rgb.r, rgb.g, rgb.b)\n    \n    if (editing != 'rgb')\n      setRGBValue(`rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`)\n    if (editing != 'cmyk')\n      setCMYKValue(`cmyk(${cmyk.c}%, ${cmyk.m}%, ${cmyk.y}%, ${cmyk.k}%)`)\n    if (editing != 'hls')\n      setHLSValue(`hls(${hls.h}, ${hls.l}%, ${hls.s}%)`)\n  }, [colorValue])\n\n  const hexToRgb = (hex) => {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }\n  \n  const rgbToHex= (r, g, b) => {\n    const componentToHex = (c) => {\n      let hex = c.toString(16);\n      return hex.length == 1 ? \"0\" + hex : hex;\n    }\n\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n  }\n\n  const cmykToRgb = (c, m, y, k) => {\n    return {\n      r: Math.round(255 * (1 - c) * (1 - k)),\n      g: Math.round(255 * (1 - m) * (1 - k)),\n      b: Math.round(255 * (1 - y) * (1 - k))\n    }\n  }\n\n  const rgbToCmyk = (r, g, b) => {\n    let k = Math.min(1 - r / 255, 1 - g / 255, 1 - b / 255)\n    return {\n      c: Math.round(100 * (1 - r / 255 - k) / (1 - k)),\n      m: Math.round(100 * (1 - g / 255 - k) / (1 - k)),\n      y: Math.round(100 * (1 - b / 255 - k) / (1 - k)),\n      k: Math.round(100 * k)\n    }\n  }\n\n  const hlsToRgb = (h, l, s) => {\n    l /= 100\n    s /= 100\n\n    let c = (1 - Math.abs(2 * l - 1)) * s\n    let x = c * (1 - Math.abs(Math.floor(h / 60) % 2 - 1))\n    let m = l - c / 2\n\n    let arr = [[c, x, 0], [x, c, 0], [0, c, x], [0, x, c], [x, 0, c], [c, 0, x]]\n    let [r, g, b] = arr[Math.floor(h / 60)]\n    \n    return {\n      r: Math.round(255 * (r + m)),\n      g: Math.round(255 * (g + m)),\n      b: Math.round(255 * (b + m))\n    }\n  }\n\n  const rgbToHls = (r, g, b) => {\n    r /= 255\n    g /= 255\n    b /= 255\n\n    let cMax = Math.max(r, g, b)\n    let cMin = Math.min(r, g, b)\n    let delta = cMax - cMin\n\n    let h, l, s\n\n    if (delta === 0)\n      h = 0\n    else if (cMax === r)\n      h = 60 * (((g - b) / delta) % 6)\n    else if (cMax === g)\n      h = 60 * ((b - r) / delta + 2)\n    else\n      h = 60 * ((r - g) / delta + 4)\n    \n    l = (cMax + cMin) / 2\n\n    s = delta / (1 - Math.abs(2 * l - 1))\n\n    h = Math.round(h)\n\n    return {\n      h: h < 0 ? 360 + h : h,\n      l: Math.round(100 * l),\n      s: Math.round(100 * s)\n    }\n  }\n\n  const colorInput = (e) => {\n    setColorValue(e.target.value)\n    setEditing('none')\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>RGB, CMYK, HLS</h1>\n      <div>\n        <input type='color' value={colorValue} onInput={colorInput}/>\n      </div>\n      <div>\n        <span>RGB</span>\n        <input type='text' className={`${!RGBValid ? 'error' : ''}`} value={RGBValue} onChange={(e) => {\n          setRGBValue(e.target.value)\n          setEditing('rgb')\n\n          let splited = /^rgb\\(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\s*,\\s*([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\s*,\\s*([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\s*\\)$/.exec(e.target.value);\n          \n          if (splited === null) {\n            setRGBValid(false);\n            return\n          }\n          setRGBValid(true);\n\n          splited = splited.map((x) => parseInt(x))\n          setColorValue(rgbToHex(splited[1], splited[2], splited[3]))\n          }}/>\n      </div>\n      <div>\n        <span>CMYK</span>\n        <input type='text' className={`${!CMYKValid ? 'error' : ''}`} value={CMYKValue} onChange={(e) => {\n          setCMYKValue(e.target.value)\n          setEditing('cmyk')\n\n          let splited = /^cmyk\\(([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*\\)$/.exec(e.target.value);\n          \n          if (splited === null) {\n            setCMYKValid(false);\n            return\n          }\n          setCMYKValid(true);\n\n          splited = splited.map((x) => parseInt(x) / 100)\n          let rgb = cmykToRgb(splited[1], splited[2], splited[3], splited[4])\n          \n          setColorValue(rgbToHex(rgb.r, rgb.g, rgb.b))\n          }}/>\n      </div>\n      <div>\n        <span>HLS</span>\n        <input type='text' className={`${!HLSValid ? 'error' : ''}`} value={HLSValue} onChange={(e) => {\n          setHLSValue(e.target.value)\n          setEditing('hls')\n          \n          let splited = /^hls\\(([0-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9])\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*,\\s*([0-9]|[1-9][0-9]|100)%\\s*\\)$/.exec(e.target.value)\n          \n          if (splited === null) {\n            setHLSValid(false);\n            return\n          }\n          setHLSValid(true);\n\n          splited = splited.map((x) => parseInt(x))\n          let rgb = hlsToRgb(splited[1], splited[2], splited[3])\n          \n          setColorValue(rgbToHex(rgb.r, rgb.g, rgb.b))\n          }}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}