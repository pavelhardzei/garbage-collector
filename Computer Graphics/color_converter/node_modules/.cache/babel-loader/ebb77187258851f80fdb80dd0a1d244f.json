{"ast":null,"code":"var _jsxFileName = \"/home/pavelhardzei/Studying/3_course/6sem/cg/lab1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [colorValue, setColorValue] = useState('#000000');\n  const [RGBValue, setRGBValue] = useState('rgb(0, 0, 0)');\n  const [CMYKValue, setCMYKValue] = useState('cmyk(0%, 0%, 0%, 100%)');\n  const [HLSValue, setHLSValue] = useState('hls(0, 0%, 0%)');\n  useEffect(() => {\n    let res = hexToRgb(colorValue);\n    setRGBValue(`rgb(${res.r}, ${res.g}, ${res.b})`);\n  }, [colorValue]);\n\n  function hexToRgb(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }\n\n  const colorInput = e => {\n    setColorValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RGB, CMYK, HLS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: colorValue,\n        onInput: colorInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"RGB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: RGBValue,\n        onChange: e => {\n          setRGBValue(e.target.value);\n          setColorValue('#121212');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"CMYK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: CMYKValue,\n        onChange: e => {\n          setCMYKValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"HLS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: HLSValue,\n        onChange: e => {\n          setHLSValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ibwDbIHOPgX2nBx+t0r1JfY8k6Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pavelhardzei/Studying/3_course/6sem/cg/lab1/src/App.js"],"names":["React","useEffect","useState","App","colorValue","setColorValue","RGBValue","setRGBValue","CMYKValue","setCMYKValue","HLSValue","setHLSValue","res","hexToRgb","r","g","b","hex","result","exec","parseInt","colorInput","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [colorValue, setColorValue] = useState('#000000')\n  const [RGBValue, setRGBValue] = useState('rgb(0, 0, 0)')\n  const [CMYKValue, setCMYKValue] = useState('cmyk(0%, 0%, 0%, 100%)')\n  const [HLSValue, setHLSValue] = useState('hls(0, 0%, 0%)')\n\n  useEffect(() => {\n    let res = hexToRgb(colorValue)\n    \n    setRGBValue(`rgb(${res.r}, ${res.g}, ${res.b})`)\n  }, [colorValue])\n\n  function hexToRgb(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }\n\n  const colorInput = (e) => {\n    setColorValue(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>RGB, CMYK, HLS</h1>\n      <div>\n        <input type='color' value={colorValue} onInput={colorInput}/>\n      </div>\n      <div>\n        <span>RGB</span>\n        <input type='text' value={RGBValue} onChange={(e) => {\n          setRGBValue(e.target.value)\n          setColorValue('#121212')\n          }}/>\n      </div>\n      <div>\n        <span>CMYK</span>\n        <input type='text' value={CMYKValue} onChange={(e) => {setCMYKValue(e.target.value)}}/>\n      </div>\n      <div>\n        <span>HLS</span>\n        <input type='text' value={HLSValue} onChange={(e) => {setHLSValue(e.target.value)}}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}